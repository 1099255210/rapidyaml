#!/usr/bin/env bash

set -e
set -x

pwd
RYML_DIR=$(pwd)

export CC_=$(echo "$CXX_" | sed 's:clang++:clang:g' | sed 's:g++:gcc:g')

if   [ "$LINT" == "all"        ] ; then CMFLAGS="$CMFLAGS -DRYML_LINT=ON -DRYML_LINT_TESTS=ON -DRYML_CLANG_TIDY=ON  -DRYML_PVS_STUDIO=ON"
elif [ "$LINT" == "clang-tidy" ] ; then CMFLAGS="$CMFLAGS -DRYML_LINT=ON -DRYML_LINT_TESTS=ON -DRYML_CLANG_TIDY=ON  -DRYML_PVS_STUDIO=OFF"
elif [ "$LINT" == "pvs-studio" ] ; then CMFLAGS="$CMFLAGS -DRYML_LINT=ON -DRYML_LINT_TESTS=ON -DRYML_CLANG_TIDY=OFF -DRYML_PVS_STUDIO=ON"
else
    CMFLAGS="$CMFLAGS -DRYML_LINT=OFF"
fi

if   [ "$SAN" == "ALL" ] ; then CMFLAGS="$CMFLAGS -DRYML_SANITIZE=ON -DRYML_SANITIZE_ONLY=ON"
elif [ "$SAN" == "A"   ] ; then CMFLAGS="$CMFLAGS -DRYML_SANITIZE=ON -DRYML_SANITIZE_ONLY=ON -DRYML_ASAN=ON  -DRYML_TSAN=OFF -DRYML_MSAN=OFF -DRYML_UBSAN=OFF"
elif [ "$SAN" == "T"   ] ; then CMFLAGS="$CMFLAGS -DRYML_SANITIZE=ON -DRYML_SANITIZE_ONLY=ON -DRYML_ASAN=OFF -DRYML_TSAN=ON  -DRYML_MSAN=OFF -DRYML_UBSAN=OFF"
elif [ "$SAN" == "M"   ] ; then CMFLAGS="$CMFLAGS -DRYML_SANITIZE=ON -DRYML_SANITIZE_ONLY=ON -DRYML_ASAN=OFF -DRYML_TSAN=OFF -DRYML_MSAN=ON  -DRYML_UBSAN=OFF"
elif [ "$SAN" == "UB"  ] ; then CMFLAGS="$CMFLAGS -DRYML_SANITIZE=ON -DRYML_SANITIZE_ONLY=ON -DRYML_ASAN=OFF -DRYML_TSAN=OFF -DRYML_MSAN=OFF -DRYML_UBSAN=ON"
else
    CMFLAGS="$CMFLAGS -DRYML_SANITIZE=OFF"
fi

if [ "$VG" == "ON" ] ; then
    CMFLAGS="$CMFLAGS -DRYML_VALGRIND=ON -DRYML_VALGRIND_SGCHECK=OFF" # FIXME SGCHECK should be ON
elif [ "$VG" == "OFF" ] ; then
    CMFLAGS="$CMFLAGS -DRYML_VALGRIND=OFF -DRYML_VALGRIND_SGCHECK=OFF"
fi

if [ "$BM" == "ON" ] ; then
    CMFLAGS="$CMFLAGS -DRYML_BUILD_BENCHMARKS=ON"
elif [ "$BM" == "OFF" ] || [ "$BM" == "" ] ; then
    CMFLAGS="$CMFLAGS -DRYML_BUILD_BENCHMARKS=OFF"
fi

if [ ! -z "$CMFLAGS" ] ; then
    echo "additional cmake flags: $CMFLAGS"
fi

if [ "$A" == "32" ] ; then
    XFLAGS="-m32"
fi

exit 0
